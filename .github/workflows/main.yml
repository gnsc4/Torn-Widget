name: Release Tauri App

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v0.1.0, v1.0.0, etc.

jobs:
  create-release-tag: # This job creates the GitHub Release entry
    runs-on: ubuntu-latest

    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      app_version: ${{ steps.get_version.outputs.version }}
      release_id: ${{ steps.create_release.outputs.id }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.get_version.outputs.version }}
          # body_path: CHANGELOG.md # Removed this line
          # The body will now default to the tag's annotation/message, or be empty.
          # Alternatively, you can provide static text here using the 'body:' input.
          # body: "Automated release for version ${{ steps.get_version.outputs.version }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-tauri:
    needs: create-release-tag # Run after the release draft/tag info is available
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or your preferred Node.js version

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable # Or your specific Rust version
          components: ${{ matrix.platform == 'windows-latest' && 'rustfmt, clippy' || '' }} # Example components

      - name: Setup MSVC for Windows
        if: matrix.platform == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.1 # Using v1.1, check for latest stable
        with:
          msbuild-architecture: x64

      - name: Install frontend dependencies (npm)
        run: npm install

      - name: Build and Upload Release Assets with tauri-action
        uses: tauri-apps/tauri-action@v0 # Consider pinning to a specific v0.x.x version for stability
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          # TAURI_SIGNING_PASSWORD: ${{ secrets.TAURI_SIGNING_PASSWORD }} # Kept commented for empty password
        with:
          tagName: ${{ github.ref_name }} # Use the full tag like v0.1.0
          releaseId: ${{ needs.create-release-tag.outputs.release_id }}
          
          # If tauri-action were creating the release, you'd modify its body here:
          # releaseName: 'App Release __TAG__'
          # releaseBody: 'Automated release for version __TAG__.' # Changed from CHANGELOG.md
          # releaseDraft: false
          # prerelease: false
          
          # Since softprops/action-gh-release is creating the release entry,
          # tauri-action will just upload assets to it. The body is controlled by the create-release-tag job.
