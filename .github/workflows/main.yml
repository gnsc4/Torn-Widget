# .github/workflows/main.yml

name: Release CI

on:
  push:
    tags:
      - 'v*.*.*' # Triggers on version tags like v1.0.0, v1.2.3

# Add this permissions block at the workflow level
permissions:
  contents: write # Allows creating releases and uploading assets

jobs:
  create-release:
    runs-on: ubuntu-latest
    # If you didn't set permissions at the workflow level, you'd add it here too:
    # permissions:
    #   contents: write
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Torn Widget ${{ github.ref_name }}"
          body: |
            Official release for Torn Widget version ${{ github.ref_name }}.
            See [CHANGELOG.md](CHANGELOG.md) for details (if you have one).
          draft: false
          prerelease: contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha')

  build-tauri:
    needs: create-release
    runs-on: ${{ matrix.platform }}
    # If you didn't set permissions at the workflow level, you'd add it here too:
    # permissions:
    #   contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - platform: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - platform: macos-latest
            rust_target: x86_64-apple-darwin
          - platform: windows-latest
            rust_target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.rust_target }}

      - name: Cache Rust dependencies (Cargo)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            torn-status-widget/src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('torn-status-widget/src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Node.js dependencies (npm)
        uses: actions/cache@v4
        with:
          path: torn-status-widget/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('torn-status-widget/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install frontend dependencies
        working-directory: ./torn-status-widget
        run: npm install

      - name: Install WebView2 (Windows)
        if: matrix.platform == 'windows-latest'
        uses: tauri-apps/setup-webview2@v3

      - name: Build Tauri app and Upload to Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          projectPath: ./torn-status-widget
          releaseId: ${{ needs.create-release.outputs.release_id }}
