name: Release Tauri App

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v0.1.0, v1.0.0, etc.

jobs:
  create-release-tag:
    runs-on: ubuntu-latest

    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      app_version: ${{ steps.get_version.outputs.version }}
      release_id: ${{ steps.create_release.outputs.id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: "Automated release for version ${{ steps.get_version.outputs.version }}."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-tauri:
    needs: create-release-tag
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List files in checkout directory (Root & Subdirectory)
        run: |
          echo "--- Root directory ( ${{ github.workspace }} ) ---"
          pwd
          ls -la
          if [ "$RUNNER_OS" == "Windows" ]; then dir; fi
          
          echo "--- Subdirectory ( ${{ github.workspace }}/torn-status-widget ) ---"
          cd torn-status-widget || exit 1 # Exit if cd fails
          pwd
          ls -la
          if [ "$RUNNER_OS" == "Windows" ]; then dir; fi
          cd .. 
        shell: bash

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Linux dependencies (GTK, WebKit, etc.)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev librsvg2-dev pkg-config

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: ${{ matrix.platform == 'windows-latest' && 'rustfmt, clippy' || '' }}

      - name: Setup MSVC for Windows
        if: matrix.platform == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.1 
        with:
          msbuild-architecture: x64

      - name: Install frontend dependencies (npm)
        run: npm install
        working-directory: ./torn-status-widget

      - name: Set execute permissions for CLI tools (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          chmod +x ./torn-status-widget/node_modules/.bin/tauri
          chmod +x ./torn-status-widget/node_modules/.bin/vite
        working-directory: ${{ github.workspace }} # Run chmod from the workspace root

      - name: Build and Upload Release Assets with tauri-action
        uses: tauri-apps/tauri-action@v0 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          # TAURI_SIGNING_PASSWORD: ${{ secrets.TAURI_SIGNING_PASSWORD }}
        with:
          projectPath: ./torn-status-widget 
          tagName: ${{ github.ref_name }} 
          releaseId: ${{ needs.create-release-tag.outputs.release_id }}
